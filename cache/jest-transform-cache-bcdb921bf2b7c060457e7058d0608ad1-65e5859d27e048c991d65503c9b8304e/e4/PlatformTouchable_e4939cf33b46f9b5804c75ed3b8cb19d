Object.defineProperty(exports,"__esModule",{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=require('react');var _react2=_interopRequireDefault(_react);
var _reactNative=require('react-native');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}







var TouchableComponent=void 0;

if(_reactNative.Platform.OS==='android'){
TouchableComponent=
_reactNative.Platform.Version<=20?_reactNative.TouchableOpacity:_reactNative.TouchableNativeFeedback;
}else{
TouchableComponent=_reactNative.TouchableOpacity;
}

if(TouchableComponent!==_reactNative.TouchableNativeFeedback){
TouchableComponent.SelectableBackground=function(){return{};};
TouchableComponent.SelectableBackgroundBorderless=function(){return{};};
TouchableComponent.Ripple=function(){return{};};
TouchableComponent.canUseNativeForeground=function(){return false;};
}var

PlatformTouchable=function(_React$Component){_inherits(PlatformTouchable,_React$Component);function PlatformTouchable(){_classCallCheck(this,PlatformTouchable);return _possibleConstructorReturn(this,(PlatformTouchable.__proto__||Object.getPrototypeOf(PlatformTouchable)).apply(this,arguments));}_createClass(PlatformTouchable,[{key:'render',value:function render()





{var _props=







this.props,children=_props.children,style=_props.style,foreground=_props.foreground,background=_props.background,useForeground=_props.useForeground,props=_objectWithoutProperties(_props,['children','style','foreground','background','useForeground']);





children=_react2.default.Children.only(children);

if(TouchableComponent===_reactNative.TouchableNativeFeedback){
useForeground=
foreground&&_reactNative.TouchableNativeFeedback.canUseNativeForeground();

if(foreground&&background){
console.warn(
'Specified foreground and background for Touchable, only one can be used at a time. Defaulted to foreground.');

}

return(
_react2.default.createElement(TouchableComponent,_extends({},
props,{
useForeground:useForeground,
background:useForeground&&foreground||background}),
_react2.default.createElement(_reactNative.View,{style:style},
children)));



}else if(TouchableComponent===_reactNative.TouchableWithoutFeedback){
return(
_react2.default.createElement(_reactNative.TouchableWithoutFeedback,props,
_react2.default.createElement(_reactNative.View,{style:style},
children)));



}else{
var TouchableFallback=this.props.fallback||TouchableComponent;
return(
_react2.default.createElement(TouchableFallback,_extends({},props,{style:style}),
children));


}
}}]);return PlatformTouchable;}(_react2.default.Component);PlatformTouchable.SelectableBackground=TouchableComponent.SelectableBackground;PlatformTouchable.SelectableBackgroundBorderless=TouchableComponent.SelectableBackgroundBorderless;PlatformTouchable.Ripple=TouchableComponent.Ripple;PlatformTouchable.canUseNativeForeground=TouchableComponent.canUseNativeForeground;exports.default=PlatformTouchable;