var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _billUsage=require('../billUsage.reducer');var _billUsage2=_interopRequireDefault(_billUsage);
var _index=require('../../actions/index.actions');var actions=_interopRequireWildcard(_index);function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key))newObj[key]=obj[key];}}newObj.default=obj;return newObj;}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}

describe('BillUsage reducer',function(){
var initialState={
productList:{
'tmhPostpaid':[],
'tol':[],
'tvs':[],
'conv':[],
'tmhPrepaid':[]},

productDetail:{
'tmhPostpaid':{},
'tol':{},
'tvs':{},
'tmhPrepaid':{},
'conv':{}},

billDetail:{
'tmhPostpaid':{},
'tol':{},
'tvs':{},
'tmhPrepaid':{},
'conv':{}}};



Object.freeze(initialState);
it('should have the initial value',function(){
expect((0,_billUsage2.default)(undefined,{})).toEqual(initialState);
});
it('should set the value of bill usage product list',function(){
var action={
type:actions.SET_BILL_USAGE_PRODUCT_LIST,
payload:{
test:1}};


var state=initialState;
var result=_extends({},
initialState,{
productList:{
tmhPostpaid:[],
tol:[],
tvs:[],
conv:[],
tmhPrepaid:[]}});


expect((0,_billUsage2.default)(state,action)).toEqual(result);
});
it('should set the value of product Detail of each product of bill usage ',function(){
var action={
type:actions.SET_BILL_USAGE_PRODUCT_DETAIL,
payload:{
productType:'tmhPostpaid',
subscriberId:123,
data:{
test:1}}};



var state=initialState;
var result=_extends({},
initialState,{
productDetail:{
tmhPostpaid:{
123:{
test:1}},


tol:{},
tvs:{},
tmhPrepaid:{},
conv:{}}});


expect((0,_billUsage2.default)(state,action)).toEqual(result);
});
it('should set the value of bill detail of each product of bill usage ',function(){
var action={
type:actions.SET_BILL_USAGE_PRODUCT_BILL_DETAIL,
payload:{
productType:'tol',
data:{
123:[
{
test2:1}]}}};





var state=initialState;
var result=_extends({},
initialState,{
billDetail:{
tol:{
123:[
{
test2:1,
isChecked:true}]},



tmhPostpaid:{},
tvs:{},
conv:{},
tmhPrepaid:{}}});


expect((0,_billUsage2.default)(state,action)).toEqual(result);
});
it('should toggle isChecked for the specifid bill Object and the ones before it and set the total checked bill amount in the corresponding product when isChecked is true',function(){
var testAction={
type:actions.TOGGLE_BILL_DETAIL_CHECK_STATUS,
payload:{
productType:'ccbsList',
accountId:'123',
invoiceNos:['1234'],
checkedBillSum:800,
isChecked:true}};var _testAction$payload=


testAction.payload,productType=_testAction$payload.productType,accountId=_testAction$payload.accountId;
var productList=[
{
productId:'12456',
accountId:'123',
balance:700,
subscriberId:'164958',
statusCode:'S',
isChecked:true,
isCollapsed:false,
checkedBillSum:700}];


var billDetail=[
{
invoiceNo:'1234',
dueDate:'2018-04-04T00:00:00.000+07:00',
billAmount:2461,
unpaidAmount:1230.5,
invoiceStatus:'O',
invoiceCycle:'10/3/2018',
isChecked:false},
{
invoiceNo:'1234',
dueDate:'2017-04-04T00:00:00.000+07:00',
billAmount:2461,
unpaidAmount:1230.5,
invoiceStatus:'O',
invoiceCycle:'10/3/2018',
isChecked:false}];


var state=_extends({},
initialState,{
billDetail:_extends({},
initialState.billDetail,_defineProperty({},
productType,_extends({},
initialState.billDetail[productType],_defineProperty({},
accountId,billDetail)))),


productList:_extends({},
initialState.productList,_defineProperty({},
productType,productList))});


var billDetailModified=[
{
invoiceNo:'1234',
dueDate:'2018-04-04T00:00:00.000+07:00',
billAmount:2461,
unpaidAmount:1230.5,
invoiceStatus:'O',
invoiceCycle:'10/3/2018',
isChecked:true},
{
invoiceNo:'1234',
dueDate:'2017-04-04T00:00:00.000+07:00',
billAmount:2461,
unpaidAmount:1230.5,
invoiceStatus:'O',
invoiceCycle:'10/3/2018',
isChecked:true}];


var productListModified=[
{
productId:'12456',
accountId:'123',
balance:700,
subscriberId:'164958',
statusCode:'S',
isChecked:true,
isCollapsed:false,
checkedBillSum:800}];


var result=_extends({},
initialState,{
billDetail:_extends({},
initialState.billDetail,_defineProperty({},
productType,_extends({},
initialState.billDetail[productType],_defineProperty({},
accountId,billDetailModified)))),


productList:_extends({},
initialState.productList,_defineProperty({},
productType,productListModified))});


expect((0,_billUsage2.default)(state,testAction)).toEqual(result);
});
it('should toggle isChecked for the specifid bill Object and the ones after it and set the total checked bill amount in the corresponding product when isChecked is false',function(){
var testAction={
type:actions.TOGGLE_BILL_DETAIL_CHECK_STATUS,
payload:{
productType:'ccbsList',
accountId:'123',
invoiceNos:['1234'],
checkedBillSum:800,
isChecked:false}};var _testAction$payload2=


testAction.payload,productType=_testAction$payload2.productType,accountId=_testAction$payload2.accountId;
var productList=[
{
productId:'12456',
accountId:'123',
balance:700,
subscriberId:'164958',
statusCode:'S',
isChecked:true,
isCollapsed:false,
checkedBillSum:700}];


var billDetail=[
{
invoiceNo:'1234',
dueDate:'2018-04-04T00:00:00.000+07:00',
billAmount:2461,
unpaidAmount:1230.5,
invoiceStatus:'O',
invoiceCycle:'10/3/2018',
isChecked:true},
{
invoiceNo:'1234',
dueDate:'2017-04-04T00:00:00.000+07:00',
billAmount:2461,
unpaidAmount:1230.5,
invoiceStatus:'O',
invoiceCycle:'10/3/2018',
isChecked:true}];


var state=_extends({},
initialState,{
billDetail:_extends({},
initialState.billDetail,_defineProperty({},
productType,_extends({},
initialState.billDetail[productType],_defineProperty({},
accountId,billDetail)))),


productList:_extends({},
initialState.productList,_defineProperty({},
productType,productList))});


var billDetailModified=[
{
invoiceNo:'1234',
dueDate:'2018-04-04T00:00:00.000+07:00',
billAmount:2461,
unpaidAmount:1230.5,
invoiceStatus:'O',
invoiceCycle:'10/3/2018',
isChecked:false},
{
invoiceNo:'1234',
dueDate:'2017-04-04T00:00:00.000+07:00',
billAmount:2461,
unpaidAmount:1230.5,
invoiceStatus:'O',
invoiceCycle:'10/3/2018',
isChecked:false}];


var productListModified=[
{
productId:'12456',
accountId:'123',
balance:700,
subscriberId:'164958',
statusCode:'S',
isChecked:true,
isCollapsed:false,
checkedBillSum:800}];


var result=_extends({},
initialState,{
billDetail:_extends({},
initialState.billDetail,_defineProperty({},
productType,_extends({},
initialState.billDetail[productType],_defineProperty({},
accountId,billDetailModified)))),


productList:_extends({},
initialState.productList,_defineProperty({},
productType,productListModified))});


expect((0,_billUsage2.default)(state,testAction)).toEqual(result);
});
});