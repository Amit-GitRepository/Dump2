






jest.mock('resolveAssetSource',function(){return function(){return{
width:20,
height:10};};});var _CurrentUsageTM=require('../CurrentUsageTM.component');var _CurrentUsageTM2=_interopRequireDefault(_CurrentUsageTM);var _react=require('react');var _react2=_interopRequireDefault(_react);var _ReactSixteenAdapter=require('enzyme/build/adapters/ReactSixteenAdapter');var _ReactSixteenAdapter2=_interopRequireDefault(_ReactSixteenAdapter);var _reactTestRenderer=require('react-test-renderer');var _reactTestRenderer2=_interopRequireDefault(_reactTestRenderer);var _enzyme=require('enzyme');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}(0,_enzyme.configure)({adapter:new _ReactSixteenAdapter2.default()});


var usageData={
'MAIN_PACKAGE':[
{
'quotaType':'DATA',
'initialQuota':'1024',
'remainingQuota':'0',
'quotaUnit':'KB'},

{
'quotaType':'DATA',
'initialQuota':'1024',
'remainingQuota':'1024',
'quotaUnit':'KB'},

{
'quotaType':'DATA',
'initialQuota':'1024',
'remainingQuota':'1024',
'quotaUnit':'KB'}],


'EXTRA_PACKAGE':[
{
'quotaType':'DATA',
'initialQuota':'Unlimited',
'remainingQuota':'0',
'quotaUnit':'KB'}]};



var usageDataWithDifferentUnit={
'MAIN_PACKAGE':[
{
'quotaType':'DATA',
'initialQuota':'2',
'remainingQuota':'0',
'quotaUnit':'MB'},

{
'quotaType':'DATA',
'initialQuota':'1024',
'remainingQuota':'1024',
'quotaUnit':'KB'},

{
'quotaType':'DATA',
'initialQuota':'1024',
'remainingQuota':'1024',
'quotaUnit':'KB'}],


'EXTRA_PACKAGE':[]};


describe('CurrentUsageTM component',function(){
it('renders correctly',function(){
var component=_reactTestRenderer2.default.create(_react2.default.createElement(_CurrentUsageTM2.default,null)).toJSON();
expect(component).toMatchSnapshot();
});

it('should calculate the usage data properly with Unlimited',function(){
var wrapper=(0,_enzyme.shallow)(_react2.default.createElement(_CurrentUsageTM2.default,null));
var caculatedUsageData={'DATA':{'consumedValue':'Unlimited','percentageConsumed':0,'totalValue':'Unlimited','unit':''},'VOICE':{}};
expect(wrapper.instance().calculateUsageData(usageData)).toEqual(caculatedUsageData);
});

it('should calculate the usage data properly with data and unit',function(){
var wrapper=(0,_enzyme.shallow)(_react2.default.createElement(_CurrentUsageTM2.default,null));
var caculatedUsageData={'DATA':{'consumedValue':'2.00','percentageConsumed':50,'totalValue':'4.00','unit':'MB'},'VOICE':{}};
expect(wrapper.instance().calculateUsageData(usageDataWithDifferentUnit)).toEqual(caculatedUsageData);
});
});