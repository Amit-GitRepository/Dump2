var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _forceUpdate=require('../forceUpdate.reducer');var _forceUpdate2=_interopRequireDefault(_forceUpdate);
var _index=require('../../actions/index.actions');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}

describe('forceUpdate reducer',function(){
var initialState={
isUpdateAlertVisible:false,
forced:false,
appLinks:{}};

it('should have an initial state with isUpdateAlertVisible false',function(){
expect((0,_forceUpdate2.default)(undefined,{})).toEqual(initialState);
});
it('FORCE_UPDATE_ALERT_VISIBLE: should set forced to true, isUpdateAlertVisible to true and appLinks to the payloads appLinks',function(){
var visibleAction=(0,_index.notifyAlertVisible)({
forced:true,
appLinks:{
playStoreUrl:'dummyAndroidLink',
appStoreUrl:'dummyIosLink'}});


expect((0,_forceUpdate2.default)(initialState,visibleAction)).toEqual(_extends({},visibleAction.payload,{isUpdateAlertVisible:true}));
});
it('FORCE_UPDATE_ALERT_HIDDEN:should set isUpdateAlertVisible to false',function(){
var hideAction=(0,_index.notifyAlertHidden)();
expect((0,_forceUpdate2.default)(initialState,hideAction)).toEqual(_extends({},initialState,{isUpdateAlertVisible:false}));
});
});