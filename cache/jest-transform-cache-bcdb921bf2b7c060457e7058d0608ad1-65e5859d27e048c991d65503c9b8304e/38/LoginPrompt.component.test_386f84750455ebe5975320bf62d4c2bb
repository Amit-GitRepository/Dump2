var _LoginPrompt=require('../LoginPrompt.component');var _LoginPrompt2=_interopRequireDefault(_LoginPrompt);
var _react=require('react');var _react2=_interopRequireDefault(_react);
var _ReactSixteenAdapter=require('enzyme/build/adapters/ReactSixteenAdapter');var _ReactSixteenAdapter2=_interopRequireDefault(_ReactSixteenAdapter);
var _reactTestRenderer=require('react-test-renderer');var _reactTestRenderer2=_interopRequireDefault(_reactTestRenderer);
var _enzyme=require('enzyme');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}

(0,_enzyme.configure)({adapter:new _ReactSixteenAdapter2.default()});

describe('LoginPrompt component',function(){
it('renders correctly',function(){
var wrapper=(0,_enzyme.shallow)(_react2.default.createElement(_LoginPrompt2.default,null));
var component=_reactTestRenderer2.default.create(_react2.default.createElement(_LoginPrompt2.default,null)).toJSON();
expect(component).toMatchSnapshot();
expect(wrapper).toBeDefined();
});
it('loginRequest: sets toRequestLogin to true',function(){
var wrapper=(0,_enzyme.shallow)(_react2.default.createElement(_LoginPrompt2.default,null));
wrapper.setState({toRequestLogin:false});
wrapper.instance().loginRequest();
expect(wrapper.instance().state.toRequestLogin).toEqual(true);
});
it('closeLoginPrompt: sets toRequestLogin to false',function(){
var wrapper=(0,_enzyme.shallow)(_react2.default.createElement(_LoginPrompt2.default,null));
wrapper.setState({toRequestLogin:true});
wrapper.instance().closeLoginPrompt();
expect(wrapper.instance().state.toRequestLogin).toEqual(false);
});
it('onLoginRequest: onLoginRequest to be called',function(){
var loginRequestMock=jest.fn();
var wrapper=(0,_enzyme.shallow)(_react2.default.createElement(_LoginPrompt2.default,{loginRequest:loginRequestMock,nextLoginAction:{'type':'test'}}));
wrapper.setState({toRequestLogin:true});
wrapper.instance().onLoginRequest();
expect(loginRequestMock).toHaveBeenCalledWith({'type':'test'});
});
it('onLoginRequest: onLoginRequest to not be called',function(){
var loginRequestMock=jest.fn();
var wrapper=(0,_enzyme.shallow)(_react2.default.createElement(_LoginPrompt2.default,{loginRequest:loginRequestMock,nextLoginAction:{'type':'test'}}));
wrapper.setState({toRequestLogin:false});
wrapper.instance().onLoginRequest();
expect(loginRequestMock).not.toHaveBeenCalledWith({'type':'test'});
});
});