var _react=require('react');var _react2=_interopRequireDefault(_react);
var _ReactSixteenAdapter=require('enzyme/build/adapters/ReactSixteenAdapter');var _ReactSixteenAdapter2=_interopRequireDefault(_ReactSixteenAdapter);
var _enzyme=require('enzyme');
var _route=require('../route.helper');
var _Shared=require('../../../components/Shared');
var _helper=require('../../../language/i18n/helper');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}

(0,_enzyme.configure)({adapter:new _ReactSixteenAdapter2.default()});

describe('Route Helper',function(){
it('should generate hamburger icon component',function(){
var wrapper=(0,_enzyme.shallow)((0,_route.generateDrawerHamburger)({},'test'));
var inst=wrapper.instance();
expect(inst).toBeInstanceOf(_Shared.Touchable);
});
it('generateCloseButton: should close button',function(){
var wrapper=(0,_enzyme.shallow)((0,_route.generateCloseButton)());
var inst=wrapper.instance();
expect(inst).toBeInstanceOf(_Shared.Touchable);
});
it('should find route title from route in section',function(){
var current={
navigation:{
state:{
routeName:'StoreLocator'}}};



var titleKey='SIDE_MENU__TRUE_SHOP';
var navOptions=(0,_route.getStackNavOption)(current);
expect(navOptions.title).toEqual((0,_helper.translate)(titleKey));
});
it('should calculate stack navigationOptions',function(){
var current={
navigation:{
state:{
routeName:'StoreLocator'}}};



var titleKey='SIDE_MENU__TRUE_SHOP';
var navOption={
headerLeft:(0,_route.generateDrawerHamburger)(current,'menu'),
title:(0,_helper.translate)(titleKey)};

var receivedVal=(0,_route.getStackNavOption)(current);
expect(receivedVal.headerStyle).toEqual(navOption.headerStyle);
expect(receivedVal.title).toEqual(navOption.title);
expect((0,_enzyme.shallow)(receivedVal.headerLeft).instance()).toBeInstanceOf(_Shared.Touchable);
});
it('getPaymentStatusHeader: should return header for payment status screen',function(){
var current={
navigation:{
state:{
routeName:'StoreLocator'}}};



var titleKey='SIDE_MENU__TRUE_SHOP';
var receivedVal=(0,_route.getPaymentStatusHeader)(current);
expect((0,_enzyme.shallow)(receivedVal.headerLeft).instance()).toBeInstanceOf(_Shared.Touchable);
expect(receivedVal.title).toBe((0,_helper.translate)(titleKey));
expect((0,_enzyme.shallow)(receivedVal.headerRight).instance()).toBeInstanceOf(_Shared.Touchable);
});
});