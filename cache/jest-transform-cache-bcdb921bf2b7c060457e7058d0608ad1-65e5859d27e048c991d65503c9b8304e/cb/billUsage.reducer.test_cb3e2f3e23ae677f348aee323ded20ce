var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _billUsage=require('../billUsage.reducer');var _billUsage2=_interopRequireDefault(_billUsage);
var _index=require('../../actions/index.actions');var actions=_interopRequireWildcard(_index);function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key))newObj[key]=obj[key];}}newObj.default=obj;return newObj;}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}

describe('BillUsage reducer',function(){
var initialState={
productList:{
'ccbsList':[],
'trueList':[],
'iccList':[],
'prepayList':[]},

productDetail:{
'ccbsList':{},
'trueList':{},
'iccList':{},
'prepayList':{}},

billDetail:{
'ccbsList':{},
'trueList':{},
'iccList':{},
'prepayList':{}}};



Object.freeze(initialState);
it('should have the initial value',function(){
expect((0,_billUsage2.default)(undefined,{})).toEqual(initialState);
});
it('should set the value of bill usage product list',function(){
var action={type:actions.SET_BILL_USAGE_PRODUCT_LIST,payload:{test:1}};
var state=initialState;
var result=_extends({},initialState,{
productList:{
ccbsList:[],
trueList:[],
iccList:[],
prepayList:[]}});


expect((0,_billUsage2.default)(state,action)).toEqual(result);
});
it('should set the value of product Detail of each product of bill usage ',function(){
var action={type:actions.SET_BILL_USAGE_PRODUCT_DETAIL,payload:{productType:'ccbsList',subscriberId:123,data:{test:1}}};
var state=initialState;
var result=_extends({},
initialState,{
productDetail:{
ccbsList:{
123:{test:1}},

trueList:{},
iccList:{},
prepayList:{}}});


expect((0,_billUsage2.default)(state,action)).toEqual(result);
});
it('should set the value of bill detail of each product of bill usage ',function(){
var action={type:actions.SET_BILL_USAGE_PRODUCT_BILL_DETAIL,payload:{productType:'trueList',subscriberId:123,data:{test2:1}}};
var state=initialState;
var result=_extends({},
initialState,{
billDetail:{
trueList:{
123:{test2:1}},

ccbsList:{},
iccList:{},
prepayList:{}}});


expect((0,_billUsage2.default)(state,action)).toEqual(result);
});
});