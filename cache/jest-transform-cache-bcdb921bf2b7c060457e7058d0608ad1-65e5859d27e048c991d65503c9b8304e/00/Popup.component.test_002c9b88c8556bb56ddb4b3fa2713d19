var _Popup=require('../Popup.component');var _Popup2=_interopRequireDefault(_Popup);
var _react=require('react');var _react2=_interopRequireDefault(_react);
var _ReactSixteenAdapter=require('enzyme/build/adapters/ReactSixteenAdapter');var _ReactSixteenAdapter2=_interopRequireDefault(_ReactSixteenAdapter);
var _reactTestRenderer=require('react-test-renderer');var _reactTestRenderer2=_interopRequireDefault(_reactTestRenderer);
var _enzyme=require('enzyme');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}

(0,_enzyme.configure)({adapter:new _ReactSixteenAdapter2.default()});

describe('Popup component',function(){
it('renders correctly',function(){
var wrapper=(0,_enzyme.shallow)(_react2.default.createElement(_Popup2.default,null));
var component=_reactTestRenderer2.default.create(_react2.default.createElement(_Popup2.default,null)).toJSON();
expect(component).toMatchSnapshot();
expect(wrapper).toBeDefined();
});
it('hidePopupAndCallAction: sets actionObject',function(){
var wrapper=(0,_enzyme.shallow)(_react2.default.createElement(_Popup2.default,null));
wrapper.setState({actionObject:{title:'hello'}});
wrapper.instance().hidePopupAndCallAction();
expect(wrapper.instance().state.actionObject).toEqual({title:'hello'});
});
it('callAction: popupPutActionMock to be called',function(){
var popupPutActionMock=jest.fn();
var wrapper=(0,_enzyme.shallow)(_react2.default.createElement(_Popup2.default,{
isOpen:true,
popupPutAction:popupPutActionMock,
message:{
title:'SIDE_MENU__LOGIN_PROMPT_TITLE_TEXT',
body:'SIDE_MENU__LOGIN_PROMPT_NEED_ACCESS',
buttons:[
{
title:'SIDE_MENU__LOGIN_PROMPT_LOGIN',
actionType:'LOGIN_REQUEST',
nextAction:null}]}}));



wrapper.setState({actionObject:{
title:'SIDE_MENU__LOGIN_PROMPT_LOGIN',
actionType:'LOGIN_REQUEST',
nextAction:null}});

wrapper.instance().callAction();
expect(popupPutActionMock).toHaveBeenCalledWith({'payload':null,'type':'LOGIN_REQUEST'});
});
it('callAction: popupPutActionMock to not be called',function(){
var popupPutActionMock=jest.fn();
var wrapper=(0,_enzyme.shallow)(_react2.default.createElement(_Popup2.default,null));
wrapper.setState({actionObject:{}});
wrapper.instance().callAction();
expect(popupPutActionMock).not.toHaveBeenCalledWith({'type':'test'});
});
});